name: Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0

    - name: Extract version
      id: get_version
      run: |
        VERSION=$(grep -oP '(?<=<Version>).*(?=</Version>)' ./AlbionDataSharp/AlbionDataSharp.csproj)
        echo "::set-output name=VERSION::$VERSION"

    - name: Create Tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag v${{ steps.get_version.outputs.VERSION }}
        git push origin v${{ steps.get_version.outputs.VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    # - name: Test
    #   run: dotnet test --no-restore --verbosity normal

    - name: Publish
      run: dotnet publish --configuration Release --no-build -o ./build

    - name: Zip artifacts
      run: |
        sudo apt-get install zip
        zip -r AlbionDataSharp_v_${{ steps.get_version.outputs.VERSION }}.zip ./build

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ALBION_DATA_SHARP_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        release_name: AlbionDataSharp v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ALBION_DATA_SHARP_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./AlbionDataSharp.zip
        asset_name: AlbionDataSharp.zip
        asset_content_type: application/zip
